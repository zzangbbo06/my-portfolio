/* COMMON */
*{
  box-sizing: border-box;
}
html{
  /* 스크롤 이동을 부드럽게 */
  scroll-behavior: smooth;
  /* 상속은 안된다, 브라우저 전체가 html */
}
body{
  /* 글자는 상속, 따로 주고 싶은 부분은 따로 주기 */
  font-family: "Noto Sans KR", sans-serif;  font-size: 16px;
  line-height: 1.6;
  color: #333;
  overflow-x: hidden;
  /* 가로스크롤 없애줌 */

  /* 테스트용 */
  /* height: 3000px; */
  /* 스크롤 생기게 해서 확인해보기 */

}
.font-en{
  font-family: "Open Sans", sans-serif;
}
a{
  text-decoration: none;
  color: inherit;
}
.inner{
  /* 고정 길이 = 고정형 */
  /* width: 1200px; */
  /* 최대값만 제한 = 반응형 */
  /* 가운데 정렬을 위한 div에 대한 css */
  max-width: 1200px;
  margin: 0 auto;
}
.title{
  font-size: 50px;
  font-weight: 800;
  text-align: center;
  margin-bottom: 50px;
}
.title::after{
  /* before, after는 content가 필수 */
  content: "";
  display: block;
  /* 가로와 높이가 있어야 만들어짐 */
  width: 80px;
  height: 2px;
  background-color: #333;
  margin: 24px auto 0;
}
img {
  /* 이미지가 인라인 요소라서 발생하는 문자 기준선(baseline) 아래의 공간을 제거하기 위해 */
  /* img는 항상 아래쪽에 약간의 공간이 있는데 baseline 이라 함 */
  display: block;
}
/* 버튼과 같이 여러 곳에서 반복 사용되는 요소를 공통 스타일로 작업하면, 매번 다시 작성할 필요가 없음 */
.btn{
  width: 120px;
  padding: 10px;
  display: block; /* a, span 같은 인라인 요소를 버튼으로 사용할 수도 있으니 블록으로 지정 */
  border: 2px solid #333;
  border-radius: 4px;
  font-size: 16px;
  font-weight: 500;
  text-align: center;
  cursor: pointer;
  transition: 0.5s;
}
.btn:hover{
  background-color: #333;
  color: #fff;
}
/* 개별 버튼 스타일 */
.btn.btn--purple{
  color: #9b30ff;
  border-color: #9b30ff;
}
.btn.btn--purple:hover{
  color: #fff;
  background-color: #9b30ff;
}
.btn.btn--brown{
  color: #592b18;
  border-color: #592b18;
}
.btn.btn--brown:hover{
  color: #fff;
  background-color: #592b18;
}
.animate-flash{
  animation-name: flash;
  animation-duration: 0.5s;
  animation-timing-function: cubic-bezier(.43, .19, .44, 1);
  /* animation 반복횟수 */
  animation-iteration-count: 2;
}
/* HEADER */
header{
  background-color: white;
  border-bottom: 1px solid #c8c8c8;
  box-shadow: 0 2px 8px rgba(204, 204, 204, .8);
  /* 수평, 수직, 블러(얼마나 흐리게 할것인가), 색+투명도 그림자 넣기 */
  
  /* 고정된 헤더 만들기 */
  /* fixed가 되면 width의 기준이 부모요소가 아니라 뷰포트가 되면서
  기준이 끊겨버리고, 내용에 맞춰 최소한으로 축소됨 -> width를 명시적으로 주면됨 */
  /* 웬만하면 width 100%와 position fixed는 같이 쓰임 */
  width: 100%;
  position: fixed;
  top: 0;
  z-index: 9;
  /* header가 밑에 깔리면 안되기 때문에*/
}
header > .inner{
  height: 60px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
header .logo img{
  width: 40px;
  /* 가로 너비만 지정하면 세로 높이는 비율에 맞춰 정해짐 */
}
header nav ul{
  display: flex;
}
header nav ul li{
  padding: 10px 20px;
  font-weight: 700;
}
header nav ul li a{
  position: relative;
}
header nav ul li a:hover{
  color: #228ce2;
  /* color: #9b30ff; */
  /* 또는 */
  /* text-shadow: 1px 1px 3px #228; */
}
header nav ul li a::before{
/* before는 content가 있어야만 사용 가능 */
content: "";
display: block;
width: 0%; /* 초기에는 밑줄이 없도록 0으로 설정 */
  height: 1px;
  background-color: #228ce2;
  position: absolute;
  /* absolute를 쓰면 자동으로 block요소로 바뀜 */
  bottom: -2px;
  left: 0;
  transition: width 0.5s;
}
header nav ul li a:hover::before{
  width: 100%;
}
header .btn-hamburger{
  display: none;
}
header .btn-hamburger .material-symbols-outlined{
  font-size: 40px;
  /* 수직 정렬 맞추기 : span태그이면서 아래쪽에 baseline 있기때문 */
  display: block;
  /* header에 높이만큼 설정 */
  /* line-height: 60px; */
  /* opacity: 0; */
}

/* VISUAL */
.visual{
  /* (중요)
    헤더가 fixed가 되어 일반 배치 흐름에서 벗어남
    fixed 헤더 다음에 오는 요소(예: 섹션)는 헤더의 높이만큼 
    외부 여백 추가 필요
  */
  width: 100%;
  background-color: #000;
  color: #fff;
  margin-top: 60px;
}
.visual > .inner{
  /* 뷰포트 기준으로 꽉채우기 */
  height: calc(100vh - 60px);
  font-size: 70px;
  display: flex;
  align-items: center;
}
.visual > .inner .purple{
  color: #228ce2;
}

/* ABOUT */
.about{
  padding: 150px 0;
}
.about > .inner{
  position: relative;
}
.about .about__wrapper{
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.about .about__wrapper .about__image{
  width: 40%;
}
.about .about__wrapper .about__image img{
  width: 100%;
  border-radius: 50%;
  box-shadow: 5px 5px 20px 5px rgba(0, 0, 0, 0.1);
}

.about .about__wrapper .about__text{
  width: 40%;
  padding: 30px;
  display: flex;
  flex-direction: column;
  /* justify는 주축기준 현재는 수직 */
  justify-content: space-evenly;
}
.about .about__wrapper .about__text .slogan{
  font-size: 35px;
  font-weight: bold;
}
.about .about__wrapper .about__text h3{
  font-size: 20px;
  font-weight: 600;
}
.about .about__wrapper .about__text h4{
  font-size: 18px;
  font-weight: 600;
  margin-bottom: 16px;
}
.about .about__wrapper .about__text li{
  line-height: 1.8;
}
.about .about__btn{
  position: absolute;
  bottom: -30px;
  right: 30px;
}
/* .about .about__btn a{
  display: flex;
  align-items: center;
} */
.about .about__btn img{
  display: inline;
  /* 인라인요소끼리의 수직정렬 */
  vertical-align: middle;
  width: 28px;
  margin-right: 10px;
}

/* SKILL */
.skill{
  padding: 150px 0;
  background-color: #000;
  color: #fff;
}
.skill .title::after{
  /* content: ""; */
  background-color: #fff;
}
.skill .skill__list{
  display: flex;
  justify-content: space-evenly;
  text-align: center;
  flex-wrap: wrap;
  gap: 30px;
}
/* 하위 선택자가 아닌 자식 선택자 쓴 것에 유의!
  하위 선택자를 쓰면 그 아래에 ul li 전부다 선택 되어짐
*/
.skill .skill__list > li {
  display: flex;
  flex-direction: column;
  /* justify-content: center; */
  align-items: center;

  /* 방법1: position */
  /* position: relative; */
  /* top: 100px; */
  /* 방법2: translate */

  transform: translateY(100px);
  opacity: 0.2;
  transition: 1s;
}
/* show가 클래스에 있을때 */
.skill.show .skill__list > li{
  /* 방법1: position */
  /* top: 0; */
  /* 방법2: transform */
  transform: translateY(0);
  /* translateY는 아래쪽으로 가는게 양수 위로 올리는게 음수 */
  opacity: 1;
}
.skill .skill__list > li:nth-child(1){transition-delay: 0.2s;}
.skill .skill__list > li:nth-child(2){transition-delay: 0.4s;}
.skill .skill__list > li:nth-child(3){transition-delay: 0.6s;}
.skill .skill__list > li:nth-child(4){transition-delay: 0.8s;}
.skill .skill__list > li:nth-child(5){transition-delay: 1s;}

.skill .skill__list li div{
  width: 50px;
  height: 40px;
  background-color: #9b30ff;
  border-radius: 50%;
  transform: rotate(-20deg);
  transition: 0.5s;
}
.skill .skill__list li:hover div{
  transform: rotate(0deg);
}
.skill .skill__list li div p{
  font-weight: bold;
  font-size: 30px;
  letter-spacing: -2px;
}
.skill .skill__list li h3{
  font-size: 18px;
  font-weight: bold;
  margin: 30px 0 20px;
}

/* PROJECT */
.project{
  padding: 150px 0;
}
.project .port{
  display: flex;
  margin: 20px 0;
}
.project .port .port__img,
.project .port .port__text{
  width: 50%;
  height: 400px;
}
.project .port .port__img .swiper{
  width: 100%;
  height: 100%;
}
.project .port .port__img .swiper img{
  width: 100%;
  height: 100%;
  object-fit: contain;
  /* img태그에 cover와 같은 기능을 줄수있음 */
}
.project .port .port__text{
  padding: 30px;
  font-size: 14px;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
}
.project .port .port__text h3{
  font-size: 20px;
  font-weight: 800;
}
.project .port .port__text li{
  line-height: 1.8;
}
.project .port .port__text li span{
  font-weight: bold;
}

.project .port .btn-group{
  display: flex;
  column-gap: 40px;
}

/* CONTACT */
.contact {
  padding: 200px 0;
}
.contact .contact__info li {
  line-height: 2;
  text-align: center;
  transition: 1s;
  opacity: 0;
}
/* 애니메이션 효과 추가 */
.contact .contact__info li:nth-child(1),
.contact .contact__info li:nth-child(3){
  /* 오른쪽에서 왼쪽으로 나타나는 */
  transform: translateX(150px);
}
.contact .contact__info li:nth-child(2){
  transform: translateX(-150px);
}

.contact.show .contact__info li{
  transform: translateX(0);
  opacity: 1;
}

.contact .contact__sns {
  margin-top: 20px;
}
.contact .contact__sns ul {
  display: flex;
  justify-content: center;
  column-gap: 10px;
}
/* 애니메이션 효과 추가 */
.contact .contact__sns ul li{
  transform: translateY(100px);
  transition: 1s;
  opacity: 0;
}
.contact.show .contact__sns ul li{
  transform: translateY(0px);
  opacity: 1;
}
.contact.show .contact__sns ul li:nth-child(1){
  transition-delay: 0.2s;
}
.contact.show .contact__sns ul li:nth-child(2){
  transition-delay: 0.4s;
}

.contact .contact__sns ul li img {
  width: 30px;
}

/* FOOTER */
footer{
  background-color: #000;
  color: #fff;
}
footer .copyright{
  text-align: center;
  font-weight: 600;
  line-height: 200px;
}

/* MODAL */
#modal, #imageModal{
  /* 화면 전체 영역 덮기 */
  background-color: rgba(0, 0, 0, 0.5);
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 99;
  /* display: flex; */
  justify-content: center;
  align-items: center;
  display: none; 
  /* 처음엔 숨김 */
}

#modal .modal-content,
#imageModal .modal-content{
  background-color: #fff;
  border-radius: 8px;
}
#modal .modal-content{
  width: 60%;
}
#modal .modal-header,
#imageModal .modal-header{
  padding: 16px;
  background-color: #222;
  color: #fff;
  border-radius: 8px 8px 0 0;
  font-weight: 700;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
#modal .modal-header .btn-close,
#imageModal .modal-header .btn-close{
  font-size: 30px;
  cursor: pointer;
}

#modal .modal-header .btn-close:hover,
#imageModal .modal-header .btn-close:hover{
  color: #aaa;
}
#modal .modal-body,
#imageModal .modal-body{
  padding: 16px;
}

/* SCROLL TO TOP */
#to-top{
  width: 42px;
  height: 42px;
  background-color: #fff8e8;
  border: 2px solid #333;
  border-radius: 10px;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed;
  bottom: 30px;
  right: 30px;
  z-index: 9;
  transition: 0.5s;
  /* 처음 상태는 투명에 x축으로 +100px 지점 */
  opacity: 0;
  transform: translateX(100px);
}

/* 반응형 스타일 */
@media screen and (max-width: 767px){
  /* 모바일에서는 화면의 80%만 차지하도록 */
  .inner{
    display: 80%;
  }
  .title{
    font-size: 30px;
    margin-bottom: 24px;
  }
  .title::after{
    width: 60px;
  }
  header .btn-hamburger{
    display: block;
  }
  header nav{
    background-color: #fff8e8;
    position: fixed;
    top: 60px;
    left: 0;
    margin: auto;
    /* height: 100%; */
    height: 0;
    width: 100%;
    transition: 0.3;
    overflow: hidden;
  }
  header nav ul{
    /* ul 태그를 원래 특성인 볼록으로 원복 */
    /* flex-direction: column; */
    padding-top: 60px;
    display: block;
  }
  header nav ul li{
    padding: 10px 80px;
    font-size: 30px;
  }
  header nav ul li a{
    transition: 0.5s;
  }
  header nav ul li:hover{
    letter-spacing: 10px;
  }
  header nav.active{
    height: 100%;
  }
  .visual > .inner{
    font-size: 30px;
    padding: 50px;
  }
  .about{
    padding: 100px 0;
  }
  .about .about__wrapper{
    flex-direction: column;
  }
  .about .about__wrapper .about__img{
    width: 100%;
  }
  .about .about__wrapper .about__text{
    width: 100%;
    text-align: center;
  }
  .skill{
    padding: 100px 0;
  }
  .project{
    padding: 100px 0;
  }
  .project .port{
    flex-direction : column;
    margin: 40px 0;
  }
  .project .port .port__img,
  .project .port .port__text{
    width: 100%;
  }
  .project .port .port__text{
    padding: 0 20px 0;
  }

  .contact{
    padding: 100px 0;
  }
  #modal .modal-content,
  #imageModal .modal-content{
    width: 80%;
  }
  #imageModal .modal-body img{
    width: 100%;
  }
}





/* 애니메이션 정의는 맨 마지막에  */
@keyframes flash {
  0%, 50%, 100%{
    opacity : 1
  }
  25%, 75%{
    opacity: 0;
  }
}

